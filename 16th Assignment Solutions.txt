Assignment-16               A Job Ready Bootcamp in C++, DSA and IOT
______________             __________________________________________

                              Multi-Dimensional Array in C Language
                            ________________________________________





//1. Write a program to calculate the sum of two matrices each of order 3x3.

#include<stdio.h>
int main()
{
   int a[3][3],b[3][3],c[3][3],i,j;
   printf("Enter 9 numbers for 1st matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   printf("\nEnter 9 numbers for 2nd matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&b[i][j]);
   }
   printf("\nsum of the matrix is:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
           c[i][j]=a[i][j]+b[i][j];
           printf("%d  ",c[i][j]);
       }
       printf("\n");
   }
   return 0;
}
__________________________________________________________________________________

//2. Write a program to calculate the product of two matrices each of order 3x3.

#include<stdio.h>
int main()
{
   int a[3][3],b[3][3],c[3][3],i,j,k,sum=0;
   printf("Enter 9 numbers for 1st matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   printf("\nEnter 9 numbers for 2nd matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&b[i][j]);
   }
   printf("\nproduct of the matrix is:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          for(k=0;k<=2;k++)
          {
              sum=sum+a[i][k]*b[k][j];
          }
          c[i][j]=sum;
          sum=0;
       }
   }
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
           printf("%d  ",c[i][j]);
       }
       printf("\n");
   }
   return 0;
}
__________________________________________________________________________________

//3. Write a program in C to find the transpose of a given matrix.

#include<stdio.h>
int main()
{
   int a[3][3],b[3][3],i,j;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   printf("\nmatrix elements: \n");
   for(i=0;i<=2;i++)
   {
      for(j=0;j<=2;j++)
         printf("%d  ",a[i][j]);
      printf("\n");
   }
   printf("\ntranspose elements:\n");
    for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
           b[i][j]=a[j][i];
           printf("%d  ",b[i][j]);
       }
       printf("\n");
   }
   return 0;
}
__________________________________________________________________________________

//4. Write a program in C to find the sum of right diagonals of a matrix.

#include<stdio.h>
int main()
{
   int a[3][3],i,j,sum=0;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
    for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
           if(i==j)
             sum=sum+a[i][j];
       }
   }
   printf("sum of right diagonals is %d",sum);
   return 0;
}
__________________________________________________________________________________

//5. Write a program in C to find the sum of left diagonals of a matrix.

#include<stdio.h>
int main()
{
   int a[3][3],i,j,sum=0;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
    for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
           if(i==i && j==2-i)
             sum=sum+a[i][j];
       }
   }
   printf("sum of left diagonals is %d",sum);
   return 0;
}
__________________________________________________________________________________

//6. Write a program in C to find the sum of rows and columns of a Matrix.

#include<stdio.h>
int main()
{
   int a[3][3],i,j,sum=0;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
    for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          sum=sum+a[i][j];
       }
       printf("sum of %d row is %d\n",i+1,sum);
       sum=0;
   }
   printf("\n");
    for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          sum=sum+a[j][i];
       }
       printf("sum of %d column is %d\n",i+1,sum);
       sum=0;
   }
   return 0;
}
__________________________________________________________________________________

//7. Write a program in C to print or display the lower triangular of a given matrix.

#include<stdio.h>
int main()
{
   int a[3][3],i,j;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   printf("\nelements of matrix:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          printf("%d  ",a[i][j]);
       }
       printf("\n");
   }
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          if(i<j)
           a[i][j]=0;
       }
   }
   printf("\nlower triangular of matrix:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          printf("%d  ",a[i][j]);
       }
       printf("\n");
   }
   return 0;
}
_________________________________________________________________________________

//8. Write a program in C to print or display an upper triangular matrix.

#include<stdio.h>
int main()
{
   int a[3][3],i,j;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   printf("\nelements of matrix:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          printf("%d  ",a[i][j]);
       }
       printf("\n");
   }
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          if(i>j)
           a[i][j]=0;
       }
   }
   printf("\nupper triangular of matrix:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          printf("%d  ",a[i][j]);
       }
       printf("\n");
   }
   return 0;
}
__________________________________________________________________________________

//9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.

#include<stdio.h>
int main()
{
   int a[3][3],i,j,count=0;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   printf("\nelements of matrix:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          printf("%d  ",a[i][j]);
       }
       printf("\n");
   }
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          if(a[i][j]!=0)
             count++;
       }
   }
   if(count<(3*3)/2)
    printf("\nyes,it is a sparse matrix");
   else
    printf("\nno,it is not a sparse matrix");
   return 0;
}
__________________________________________________________________________________

//Alter 9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.

#include<stdio.h>
int main()
{
   int a[3][3],i,j,count=0;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   printf("\nelements of matrix:\n");
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          printf("%d  ",a[i][j]);
       }
       printf("\n");
   }
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          if(a[i][j]!=0)
             count++;
       }
   }
   if(count<(3*3)/2)
    printf("\nit is a sparse matrix");
   else
    printf("\nit is a dense matrix");
   return 0;
}
__________________________________________________________________________________

//10. Write a program in C to find the row with maximum number of 1s.

#include<stdio.h>
int main()
{
   int a[3][3],i,j,count=0,max=0,index;
   printf("Enter 9 numbers of matrix ");
   for(i=0;i<=2;i++)
   {
    for(j=0;j<=2;j++)
        scanf("%d",&a[i][j]);
   }
   for(i=0;i<=2;i++)
   {
       for(j=0;j<=2;j++)
       {
          if(a[i][j]==1)
             count++;
       }
       if(count>max)
       {
           max=count;
           index=i;
       }
       count=0;
   }
    printf("\n%d row has maximum number of 1s = %d",index+1,max);

   return 0;
}
__________________________________________________________________________________