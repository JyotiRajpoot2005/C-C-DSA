Assignment-7                A Job Ready Bootcamp in C++, DSA and IOT 
_____________              ___________________________________________

                             Iterative Control Statements (Part - 2)
                            _________________________________________





1. Write a program to find the Nth term of the Fibonacci series.

#include<stdio.h>
int main()
{
    int N,a=-1,b=1,c,i;
    printf("Enter Nth term of the Fibonacci series");
    scanf("%d",&N);
    for(i=1;i<=N;i++)
    {
        c=a+b;
        a=b;
        b=c;
    }
    printf("%d ",c);
    return 0;
}
__________________________________________________________________________________________

2. Write a program to print first N terms of Fibonacci series.

#include<stdio.h>
int main()
{
    int N,a=-1,b=1,c,i;
    printf("Enter a number");
    scanf("%d",&N);
    for(i=1;i<=N;i++)
    {
        c=a+b;
        printf("%d ",c);
        a=b;
        b=c;
    }
    return 0;
}
__________________________________________________________________________________________

3. Write a program to check whether a given number is there in the Fibonacci series or not.

#include<stdio.h>
int main()
{
    int n,i,a=-1,b=1,c;
    printf("Enter a number");
    scanf("%d",&n);
    for(i=1;i;i++)
    {
      c=a+b;
      a=b;
      b=c;
      if(c==n)
         {
            printf("number is in the Fibonacci series");
            break;
         }
      if(c>n)
         {
            printf("number is not in the Fibonacci series"); 
            break;  
         }
    }
    return 0;
}
__________________________________________________________________________________________

4. Write a program to calculate HCF of two numbers.

#include<stdio.h>
int main()
{
    int a,b,i,hcf;
    printf("Enter two numbers");
    scanf("%d%d",&a,&b);
    for(i=a<b?a:b;i>=1;i--)
    {
      if(a%i==0 && b%i==0)
            break;
    }
    printf("HCF is %d",i);
    return 0;
}
__________________________________________________________________________________________

5. Write a program to check whether two given numbers are co-prime numbers or not.

#include<stdio.h>
int main()
{
    int a,b,i;
    printf("Enter two numbers");
    scanf("%d%d",&a,&b);
    for(i=a<b?a:b;i>=1;i--)
    {
      if(a%i==0 && b%i==0)
            break;
    }
    if(i==1)
        printf("numbers are co-prime numbers");
    else
        printf("numbers are not co-prime numbers");
    return 0;
}
__________________________________________________________________________________________

6. Write a program to print all Prime numbers under 100.

#include<stdio.h>
int main()
{
    int i,j;
    for(i=2;i<100;i++)
    {
       for(j=2;j<i;j++)
       {
            if(i%j==0)
            break;
       }
       if(j==i)
          printf("%d ",j);
    }
    return 0;
}

_________________________________________________________________________________________

7. Write a program to print all Prime numbers between two given numbers.

#include<stdio.h>
int main()
{
    int a,b,i,j;
    printf("Enter two numbers");
    scanf("%d%d",&a,&b);
    for(i=a;i<b;i++)
    {
       for(j=2;j<i;j++)
          {
              if(i%j==0)
              break;
          }
       if(j==i)
          printf("%d ",j);
    }
    return 0;
}
_________________________________________________________________________________________

8. Write a program to find next Prime number of a given number.

#include<stdio.h>
int main()
{
    int a,i,j;
    printf("Enter a number");
    scanf("%d",&a);
    for(i=a+1;i;i++)
    {
       for(j=2;j<i;j++)
          {
              if(i%j==0)
              break;
          }
       if(j==i)
          {
              printf("next prime number of %d is %d",a,j);
              break;
          }
    }
    return 0;
}
_________________________________________________________________________________________

9. Write a program to check whether a given number is an Armstrong number or not.

#include<stdio.h>
int main()
{
    int a,k,t,sum=0;
    printf("Enter an armstrong number");
    scanf("%d",&a);
    t=a;
    while(a)
    {
       k=a%10;
       sum=sum+(k*k*k);
       a=a/10;
    }
    if(t==sum)
        printf("Armstrong number");
    else
        printf("Not an Armstrong number");
    return 0;
}
_________________________________________________________________________________________

10. Write a program to print all Armstrong numbers under 1000.

#include<stdio.h>
int main()
{
    int i,k,t,sum;
    for(i=1;i<=1000;i++)
    {
       t=i;
       sum=0;
       while(t)
       {
          k=t%10;
          sum=sum+(k*k*k);
          t=t/10;
       }
       if(i==sum)
        printf("%d ",sum);
    }
    return 0;
}
_________________________________________________________________________________________